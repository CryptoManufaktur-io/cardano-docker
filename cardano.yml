x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  cardano-node:
    build: 
      context: ./cardano
      dockerfile: Dockerfile.binary
      args:
        - CARDANO_NODE_VERSION=${CARDANO_NODE_VERSION}
    restart: unless-stopped
    entrypoint: docker-entrypoint.sh
    environment:
      - CONFIG=/runtime/files/config.json
      - TOPOLOGY=/runtime/files/topology.json
      - SOCKET=/runtime/sockets/node.socket
      - DB_DIR=/runtime/db
      - CNODE_HOST=${CNODE_HOST}
      - CNODE_PORT=${CNODE_PORT}
      - KES=${KES:-}
      - VRF=${VRF:-}
      - CERT=${CERT:-}
    volumes:
      - node-runtime:/runtime
      - ${LOCAL_WORKSPACE_FOLDER:-.}/config/${NETWORK}:/runtime/files
    labels:
      - metrics.scrape=true
      - metrics.port=12798
      - metrics.path=/metrics
      - metrics.network=cardano-node-${NETWORK}
      - traefik.enable=true
      - traefik.http.routers.${RPC_HOST}.service=${RPC_HOST}
      - traefik.http.routers.${RPC_HOST}.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST}.rule=Host(`${RPC_HOST}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST}.tls.certresolver=letsencrypt
      - traefik.http.routers.${RPC_HOST}lb.service=${RPC_HOST}
      - traefik.http.routers.${RPC_HOST}lb.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST}lb.rule=Host(`${RPC_LB}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${RPC_HOST}.loadbalancer.server.port=${CNODE_PORT}
    <<: *logging

volumes:
  node-runtime:
