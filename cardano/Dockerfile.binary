# Note: You can use any Debian/Ubuntu based image you want. 
FROM debian:bookworm-slim
ARG USERNAME=cardano
ARG GID=1000
ARG UID=1000
ARG CARDANO_NODE_VERSION

# Install common tools
RUN  apt update \
    && export DEBIAN_FRONTEND=noninteractive \
    && apt-get install -y procps curl wget iproute2 jq bc lz4 zstd aria2 \
    # Upgrade
    && apt upgrade -y \
    # Clean up
    && apt autoremove -y \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /var/cache/apt/archives/*

# Setup non root user
# See https://stackoverflow.com/a/55757473/12429735RUN
RUN adduser \
    --disabled-password \
    --gecos "" \
    --shell "/sbin/nologin" \
    --uid "${UID}" \
    "${USERNAME}" \
    && mkdir -p /runtime/files /runtime/db /runtime/sockets /runtime/keys /runtime/logs \
    && chown -R $USERNAME:$USERNAME /runtime

# Setup cardano
RUN \
    # Download binary files and extract
    if [ "$CARDANO_NODE_VERSION" = "latest" ]; then \
        curl -s https://api.github.com/repos/IntersectMBO/cardano-node/releases/latest | grep "browser_download_url.*linux.tar.gz" | cut -d : -f 2,3 | tr -d '"' | xargs wget -O cardano.tar.gz; \
    else \
        curl -L -o cardano.tar.gz https://github.com/IntersectMBO/cardano-node/releases/download/${CARDANO_NODE_VERSION}/cardano-node-${CARDANO_NODE_VERSION}-linux.tar.gz; \
    fi \
    && mkdir cardano \
    && tar xfvz cardano.tar.gz -C cardano \
    && mv cardano/bin/* /usr/local/bin/ \
    && rm -r cardano cardano.tar.gz \
    # Setup gLiveView
    && curl -s -o /usr/local/bin/gLiveView.sh https://raw.githubusercontent.com/cardano-community/guild-operators/master/scripts/cnode-helper-scripts/gLiveView.sh \
    && curl -s -o /usr/local/bin/env https://raw.githubusercontent.com/cardano-community/guild-operators/master/scripts/cnode-helper-scripts/env \
    && chmod +x /usr/local/bin/gLiveView.sh

# VARIABLES
ENV CNODE_HOME="/runtime"
ENV UPDATE_CHECK="N"
ENV CNODEBIN="/usr/local/bin/cardano-node"
ENV CCLI="/usr/local/bin/cardano-cli"
ENV CARDANO_NODE_SOCKET_PATH="$CNODE_HOME/sockets/node.socket"

# Copy files
COPY docker-entrypoint.sh /usr/local/bin/
COPY stakepool.sh /usr/local/bin/

# Use the user created
USER $USERNAME
WORKDIR /runtime

ENTRYPOINT [ "cardano-node" ]
